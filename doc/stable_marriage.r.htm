<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Stable Marriage Problem With Three Solutions</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Stable Marriage Problem With Three Solutions">
<meta name="keywords" id="keywords" content=" ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_stable_marriage.r_htm.js'>
</script>
</head>
<body>
<table><tr>
<td><a href="bad_college.r.htm" target="_top">Prev</a>
</td><td><a href="fewer_rows.r.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>match_csv</option>
<option>student_college</option>
<option>stable_marriage.R</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>match_csv-&gt;</option>
<option>student_college</option>
<option>whats_new</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>student_college-&gt;</option>
<option>get_started.R</option>
<option>bad_student.R</option>
<option>bad_college.R</option>
<option>stable_marriage.R</option>
<option>fewer_rows.R</option>
</select>
</td>
<td>stable_marriage.R</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Discussion</option>
<option>Source Code</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>Stable Marriage Problem With Three Solutions</big></big></b></center>
<br>
<b><big><a name="Discussion" id="Discussion">Discussion</a></big></b>
<br>
This is a marriage problem because there is just one slot per college.
There are three couples and three stable solutions;
see optimality of the solution for the
<a href="https://en.wikipedia.org/wiki/Stable_marriage_problem#Optimality_of_the_solution" target="_top"><span style='white-space: nowrap'>stabe_marriage_problem</span></a>
.
Only one of the solutions is student optimal.

<br>
<br>
<b><big><a name="Source Code" id="Source Code">Source Code</a></big></b>

<pre><tt>
<i><font color="#9A1900"># ---------------------------------------------------------------------------</font></i>
source(<font color="#FF0000">'R/student_college.R'</font>) <i><font color="#9A1900"># load the student_college function</font></i>
setwd(<font color="#FF0000">'build'</font>)                <i><font color="#9A1900"># put files in build directory</font></i>
<i><font color="#9A1900"># ---------------------------------------------------------------------------</font></i>
<i><font color="#9A1900"># student.csv</font></i>
data &lt;- paste(
<font color="#FF0000">"A,B,C"</font> , <i><font color="#9A1900"># student names</font></i>
<font color="#FF0000">"Y,Z,X"</font> ,
<font color="#FF0000">"X,Y,Z"</font> ,
<font color="#FF0000">"Z,X,Y"</font> ,
sep=<font color="#FF0000">"</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font> <i><font color="#9A1900"># put a newline character between each line above</font></i>
)
write(data, <font color="#FF0000">"student.csv"</font>)
<i><font color="#9A1900"># ---------------------------------------------------------------------------</font></i>
<i><font color="#9A1900"># college.csv</font></i>
data &lt;- paste(
<font color="#FF0000">"X,Y,Z"</font> , <i><font color="#9A1900"># college names</font></i>
<font color="#FF0000">"1,1,1"</font> ,
<font color="#FF0000">"B,C,A"</font> ,
<font color="#FF0000">"A,B,C"</font> ,
<font color="#FF0000">"C,A,B"</font> ,
sep=<font color="#FF0000">"</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>  <i><font color="#9A1900"># put a newline character between each line above</font></i>
)
write(data, <font color="#FF0000">"college.csv"</font>)
<i><font color="#9A1900"># ---------------------------------------------------------------------------</font></i>
student_file &lt;- <font color="#FF0000">"student.csv"</font>
college_file &lt;- <font color="#FF0000">"college.csv"</font>
match_file   &lt;- <font color="#FF0000">"match.csv"</font>
student_college(student_file, college_file, match_file)
<i><font color="#9A1900"># ---------------------------------------------------------------------------</font></i>
match_data_frame &lt;- read.csv(
     match_file, colClasses  = <font color="#FF0000">"character"</font>, check.names = FALSE
)
<i><font color="#9A1900">#</font></i>
<i><font color="#9A1900"># select the solution that is student optimal</font></i>
optimal &lt;- match_data_frame[,<font color="#FF0000">"optimal"</font>]
student &lt;- match_data_frame[,<font color="#FF0000">"student"</font>][ optimal == <font color="#FF0000">"s"</font> ]
college &lt;- match_data_frame[,<font color="#FF0000">"college"</font>][ optimal == <font color="#FF0000">"s"</font> ]
matchid &lt;- match_data_frame[,<font color="#FF0000">"matchid"</font>][ optimal == <font color="#FF0000">"s"</font> ]
<i><font color="#9A1900">#</font></i>
browser()
id1 &lt;- matchid[1]
ok  &lt;- length(student) == 3
ok  &lt;- ok &amp;&amp; student[1] == <font color="#FF0000">"A"</font> &amp;&amp; college[1] == <font color="#FF0000">"Y"</font> &amp;&amp; matchid == id1
ok  &lt;- ok &amp;&amp; student[2] == <font color="#FF0000">"B"</font> &amp;&amp; college[2] == <font color="#FF0000">"Z"</font> &amp;&amp; matchid == id1
ok  &lt;- ok &amp;&amp; student[3] == <font color="#FF0000">"C"</font> &amp;&amp; college[3] == <font color="#FF0000">"X"</font> &amp;&amp; matchid == id1
<i><font color="#9A1900">#</font></i>
<b><font color="#0000FF">if</font></b>( ok )
{    message(<font color="#FF0000">"stable_marriage: OK"</font>)
} <b><font color="#0000FF">else</font></b> {
     stop(<font color="#FF0000">"stable_marriage: Error"</font>)
}</tt></pre>

<hr>Input File: example/student_college/stable_marriage.R

</body>
</html>
