<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Student / College Matching Problem</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Student / College Matching Problem">
<meta name="keywords" id="keywords" content=" ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_student_college_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/match_csv" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="_contents.htm" target="_top">Prev</a>
</td><td><a href="get_started.r.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>match_csv</option>
<option>student_college</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>match_csv-&gt;</option>
<option>student_college</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>student_college-&gt;</option>
<option>get_started.R</option>
<option>bad_student.R</option>
<option>bad_college.R</option>
<option>stable_marriage.R</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Description</option>
<option>Conventions</option>
<option>n_student</option>
<option>n_college</option>
<option>student_file</option>
<option>college_file</option>
<option>match_file</option>
<option>---..student</option>
<option>---..college</option>
<option>---..matchid</option>
<option>---..optimal</option>
<option>Example</option>
<option>Contents</option>
</select>
</td>
</tr></table><br>
 


<center><b><big><big>Student / College Matching Problem</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>student_college(</span></font><i><font color="black"><span style='white-space: nowrap'>student_file</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>college_file</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>match_file</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="Description" id="Description">Description</a></big></b>
<br>
Finds one of the stable matchings for the college admissions problem.

<br>
<br>
<b><big><a name="Conventions" id="Conventions">Conventions</a></big></b>

<ol type="1"><li>
The data corresponding to one row and one column is called a cell.
Leading and trailing white space, in a cell, does not matter.
A cell with only white space, or nothing, is called empty.
</li><li>

No two students have the same name and no student name is empty.
</li><li>

No two colleges have the same name and no college name is empty.
</li></ol>


<br>
<br>
<b><big><a name="n_student" id="n_student">n_student</a></big></b>
<br>
We use 
<code><i><font color="black"><span style='white-space: nowrap'>n_student</span></font></i></code>
 to denote the number of students in the match,
which is also equal to the number of columns in 
<code><i><font color="black"><span style='white-space: nowrap'>student_file</span></font></i></code>
.

<br>
<br>
<b><big><a name="n_college" id="n_college">n_college</a></big></b>
<br>
We use 
<code><i><font color="black"><span style='white-space: nowrap'>n_college</span></font></i></code>
 to denote the number of colleges in the match,
which is also equal to the number of columns in 
<code><i><font color="black"><span style='white-space: nowrap'>college_file</span></font></i></code>
.

<br>
<br>
<b><big><a name="student_file" id="student_file">student_file</a></big></b>
<br>
This is a csv input file
with 
<code><i><font color="black"><span style='white-space: nowrap'>n_student</span></font></i></code>
 columns and

<code><i><font color="black"><span style='white-space: nowrap'>n_college</span></font></i><font color="blue"><span style='white-space: nowrap'>+1</span></font></code>
 rows.
The first row contains the names of the students.
The other cells in each column are the names of the
acceptable colleges for the student name in the first row of the column.
The lower the row index, the more preferred the college is to the student.
No college name appears twice in a column.
For each student (column), empty cells are used for the colleges that are
not acceptable to a student and are placed at the bottom of the column.

<br>
<br>
<b><big><a name="college_file" id="college_file">college_file</a></big></b>
<br>
This is a csv input file with 
<code><i><font color="black"><span style='white-space: nowrap'>n_college</span></font></i></code>
 columns and

<code><i><font color="black"><span style='white-space: nowrap'>n_student+2</span></font></i></code>
 rows.
The first row contains the names of the colleges.
Each column of the second row contains a positive integer that specifies
the number of students positions the corresponding
college has available.
The other cells in each column are the names of the
acceptable students for the college name in the first row of the column.
The lower the row index, the more preferred the student is to the college.
No student name appears twice in a column.
For each college (column), empty cells are used for the students that are
not acceptable to a college and are placed at the bottom of the column.

<br>
<br>
<b><big><a name="match_file" id="match_file">match_file</a></big></b>
<br>
This is a csv output file where each row represents a pairing
of a student with a college. It has the columns below and is sorted
first by 
<code><i><font color="black"><span style='white-space: nowrap'>matchid</span></font></i></code>
 and second by 
<code><i><font color="black"><span style='white-space: nowrap'>student</span></font></i></code>
.

<br>
<br>
<big><a name="match_file.student" id="match_file.student">student</a></big>
<br>
The column contains the name of the student for this pairing.

<br>
<br>
<big><a name="match_file.college" id="match_file.college">college</a></big>
<br>
This column contains the name of the college for this pairing.

<br>
<br>
<big><a name="match_file.matchid" id="match_file.matchid">matchid</a></big>
<br>
This column contains an integer, starting with one and incrementing by one,
that identifies a set of pairs having the same 
<code><i><font color="black"><span style='white-space: nowrap'>match</span></font></i></code>
 value.
Each set of pairs constitutes a different stable matching.

<br>
<br>
<big><a name="match_file.optimal" id="match_file.optimal">optimal</a></big>
<br>
If a cell in this column contains the single character or is empty.
If the character is <code><font color="blue">s</font></code>, this match is student optimal.
If it is <code><font color="blue">c</font></code>, this match is college optimal.
If it is <code><font color="blue">b</font></code>, this match is both student and college optimal.
Otherwise, cell is empty.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>

<br>
<br>
<b><big><a name="Contents" id="Contents">Contents</a></big></b>
<br>
<table>
<tr><td><a href="get_started.r.htm" target="_top">get_started.R</a></td><td>Get&nbsp;Starting&nbsp;Using&nbsp;student_college</td></tr><tr><td><a href="bad_student.r.htm" target="_top">bad_student.R</a></td><td>Example:&nbsp;Student&nbsp;Thinks&nbsp;to&nbsp;Highly&nbsp;of&nbsp;It's&nbsp;Self</td></tr><tr><td><a href="bad_college.r.htm" target="_top">bad_college.R</a></td><td>Example:&nbsp;College&nbsp;Thinks&nbsp;To&nbsp;Highly&nbsp;of&nbsp;It's&nbsp;Self</td></tr><tr><td><a href="stable_marriage.r.htm" target="_top">stable_marriage.R</a></td><td>Stable&nbsp;Marriage&nbsp;Problem&nbsp;With&nbsp;Three&nbsp;Solutions</td></tr></table>
<hr>Input File: R/student_college.R

</body>
</html>
